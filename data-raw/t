# THIS DOESNT WORK
#usethis::use_data(get(paste0(GSE_ID, '_sampDesc')), overwrite=T)


# separate the counts into
# repl_1
# repl_2 (the 'F*repl$' samples)
# and the rest into 4 sample sets, balanced by PAM50 subtype

repl2_ndx <- grep('repl$', colnames(geneExpression))
geneExpression_repl2 <- geneExpression[, repl2_ndx]
geneExpression <- geneExpression[, -repl2_ndx]
rm(repl2_ndx)

repl1_ndx <- match(sub('repl$', '', colnames(geneExpression_repl2)),
  colnames(geneExpression))
geneExpression_repl1 <- geneExpression[, repl1_ndx]
geneExpression <- geneExpression[, -repl1_ndx]
rm(repl1_ndx)

# save repl counts
save(list='geneExpression_repl1', file=file.path(data_DIR, 'geneExpression_repl1.rda'),
  compress='xz')

save(list='geneExpression_repl2', file=file.path(data_DIR, 'geneExpression_repl2.rda'),
  compress='xz')


# divide the rest into 5 groups - 
sample_ndx <- match(colnames(geneExpression), sampDesc$title)
with(sampDesc[sample_ndx, ], table(pam50_subtype, exclude=NULL))

set.seed(1)
foldid_vec <- caret::createFolds(
factor(sampDesc[sample_ndx, "pam50_subtype"]),
k=5,
list=F)

fold_samples_lst <- split(sampDesc[sample_ndx, "title"], foldid_vec)

for(JJ in 1:length(fold_samples_lst)){
 sub_ndx <- match(fold_samples_lst[[JJ]], colnames(geneExpression))
 assign(paste0('geneExpression_sub',JJ,'.rda'), geneExpression[, sub_ndx])
 geneExpression <- geneExpression[, -sub_ndx]

  save(list=paste0('geneExpression_sub',JJ,'.rda'), 
  file=file.path(data_DIR, paste0('geneExpression_sub',JJ, '.rda')),
  compress='xz')

} 


if(ncol(geneExpression)) stop("Oh, oh - geneExpression should now be empty!!!!")

# Add gene expression table info to sampDesc
sample_geneExpression_table_vec <- with(sampDesc,
ifelse(title %in% colnames(geneExpression_repl1), 'repl1',
ifelse(title %in% colnames(geneExpression_repl2), 'repl2',
ifelse(title %in% colnames(geneExpression_sub1), 'sub1',
ifelse(title %in% colnames(geneExpression_sub2), 'sub2',
ifelse(title %in% colnames(geneExpression_sub3), 'sub3',
ifelse(title %in% colnames(geneExpression_sub4), 'sub4',
ifelse(title %in% colnames(geneExpression_sub5), 'sub5',
'ERROR'))))))))

table(sample_geneExpression_table_vec)

sampDesc <- data.frame(countTable=sample_geneExpression_table_vec, sampDesc)


# save sampDesc
save(list='sampDesc', file=file.path(data_DIR, 'sampDesc.rda'),
  compress='xz')
  

# save genes_annot
save(list='genes_annot', file=file.path(data_DIR, 'genes_annot.rda'),
   compress='xz')

